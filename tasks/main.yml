---
- name: Debian block
  when: ansible_os_family == 'Debian'
  block:
    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Remove cloude-init
      ansible.builtin.import_tasks: "cloud-init.yml"
      vars:
        server_services: "{{ ansible_facts }}"

    - name: Remove snapd
      ansible.builtin.import_tasks: "snapd.yml"
      vars:
        server_services: "{{ ansible_facts }}"

    - name: Install base packages on Debian
      become: true
      ansible.builtin.apt:
        name: "{{ package.name }}"
        # update_cache: yes
        state: present
      loop: "{{ package_list }}"
      loop_control:
        loop_var: package

- name: RedHat block
  when: ansible_os_family == 'RedHat'
  block:
    - name: Set a hostname specifying strategy
      become: true
      when: set_hostname
      ansible.builtin.hostname:
        name: '{{ inventory_hostname}}'
        use: systemd

    - name: Install base packages on RedHat
      become: true
      ansible.builtin.dnf:
        name: "{{ package.name }}"
        state: present
      loop: "{{ package_list_redhat }}"
      loop_control:
        loop_var: package

    - name: Install pip package
      ansible.builtin.pip:
        name: "{{ package.name }}"
      loop: "{{ pip_package_list }}"
      loop_control:
        loop_var: package

- name: Check if vifm theme exists
  ansible.builtin.stat:
    path: ~/.config/vifm/colors/solarized-dark.vifm
  register: stat_vifm_theme_result
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Creates config directory for vifm
  ansible.builtin.file:
    path: ~/.config/vifm/colors/
    state: directory
    recurse: true
  when:
    - ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'
    - not stat_vifm_theme_result.stat.exists

- name: Download vifm theme
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/vifm/vifm-colors/master/solarized-dark.vifm
    dest: ~/.config/vifm/colors/solarized-dark.vifm
#  when: not stat_vifm_theme_result.stat.exists
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Create .vifmrc config file
  ansible.builtin.template:
    src: vifmrc.j2
    dest: ~/.config/vifm/vifmrc
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Create .vimrc config file
  ansible.builtin.template:
    src: vimrc.j2
    dest: ~/.vimrc
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

# ZSH
- name: Check if .zshrc exists
  ansible.builtin.stat:
    path: ~/.zshrc
  register: stat_rc_result
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Check if .oh-my-zsh exists
  ansible.builtin.stat:
    path: ~/.oh-my-zsh
  register: stat_oh_my_zsh_result
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Cloning oh-my-zsh
  ansible.builtin.git:
    repo=https://github.com/robbyrussell/oh-my-zsh
    dest=~/.oh-my-zsh
  when:
    - not stat_oh_my_zsh_result.stat.exists
    - ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Check oh-my-zsh folder owner
  ansible.builtin.file:
    path: '~/.oh-my-zsh'
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    recurse: true
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Cloning zsh-autosuggestions
  ansible.builtin.git:
    repo=https://github.com/zsh-users/zsh-autosuggestions
    dest=~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  # when: not stat_oh_my_zsh_result.stat.exists
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Cloning zsh-syntax-highlighting
  ansible.builtin.git:
    repo=https://github.com/zsh-users/zsh-syntax-highlighting
    dest=~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  # when: not stat_oh_my_zsh_result.stat.exists
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Create zsh maccan theme
  ansible.builtin.template:
    src: maccan.zsh-theme.j2
    dest: ~/.oh-my-zsh/custom/themes/maccan.zsh-theme
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Create .zshrc
  ansible.builtin.template:
    src: zshrc.j2
    dest: ~/.zshrc
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'Debian'

- name: Create .zshrc
  ansible.builtin.template:
    src: zshrc_redhat.j2
    dest: ~/.zshrc
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'RedHat'

- name: Create starship.toml
  ansible.builtin.template:
    src: starship.toml
    dest: ~/.config/starship.toml
    backup: true
    mode: 'u=rw,go=r'
  when: ansible_os_family == 'Debian'

- name: Set default shell for users
  become: true
  ansible.builtin.user:
    name: '{{ ansible_user }}'
    shell: /bin/zsh
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'
